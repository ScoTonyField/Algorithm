function  [MaxScore,Point]= BackTrace(MaxScore,point,score,matrix,totalNumber,Step)
if MaxScore < score
    MaxScore = score;
    Point(size(point,1)-Step,1)=point(1,1);
    Point(size(point,1)-Step,2)=point(1,2);
    flag = 1;
end
if score == 0
    Point(size(point,1)-Step,1)=0;
    Point(size(point,1)-Step,2)=0;
    
else
    if flag == 0
        Point(size(point,1)-Step,1)=Point(size(point,1)-Step,1);
        Point(size(point,1)-Step,2)=Point(size(point,1)-Step,2);
end
if Step == 0
    fprintf("Step:%d\n",Step);
    fprintf("当前最高分数：%d\n",MaxScore);
    fprintf("叶子节点分数：%d\n",score);
    fprintf("最终棋盘：\n");
    disp(matrix)
    fprintf("分支结束！返回上一代！\n\n");
else
    for i = size(matrix,1):-1:1
        for j = 1:size(matrix,2)
            [Score,matrix_now] = DFS(i,j,matrix,totalNumber);
            if Score>0    
                point(1,1) = i;
                point(1,2) = j;
                score_Temp = score + Score;
                Step_temp = Step - 1;
                [MaxScore,Point]=BackTrace(MaxScore,point,score_Temp,matrix_now,totalNumber,Step_temp);
            end
        end
    end
end
end

